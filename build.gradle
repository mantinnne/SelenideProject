buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id 'java-library'
    id 'application'
    id 'io.qameta.allure' version '2.8.1'
}

sourceCompatibility = 1.9
targetCompatibility = 1.9

def
        allureVersion = "2.13.8",
        junitVersion = "5.7.0",
        selenideVersion = "5.20.1",
        ownerVersion = "1.0.12"



repositories {
    mavenCentral()
}

allure {
    version = "${allureVersion}"
    autoconfigure = true
    aspectjweaver = true
    useJUnit5 {
        version = "${allureVersion}"
    }
}

dependencies {
    testImplementation(
            "io.github.artsok:rerunner-jupiter:2.1.6",
            "org.aeonbits.owner:owner:$ownerVersion",
            'io.rest-assured:rest-assured:4.3.3',
            "org.aspectj:aspectjweaver:1.9.6",
            "com.codeborne:selenide:$selenideVersion",
            "com.codeborne:pdf-test:1.5.1",
            "com.codeborne:xls-test:1.4.3",
            "net.lingala.zip4j:zip4j:1.3.2",
            "com.github.javafaker:javafaker:1.0.2",
            "org.hamcrest:hamcrest-all:1.3",
            "org.assertj:assertj-core:3.19.0",
            "com.fasterxml.jackson.core:jackson-databind:2.10.3",
            "io.qameta.allure:allure-java-commons:2.13.8",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.slf4j:slf4j-nop:1.7.25",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.junit.jupiter:junit-jupiter-params:$junitVersion")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion",
            'com.browserup:browserup-proxy-core:2.0.1'

}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    System.setProperty("chromeoptions.prefs", "intl.accept_languages=en")
    systemProperties += System.properties
    System.setProperty("junit.jupiter.extensions.autodetection.enabled", "true")

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }
}

test {
    useJUnitPlatform()
    systemProperties += System.properties

    testLogging {
        lifecycle {
            events "passed", "failed"
            exceptionFormat "short"
        }
    }
}

task oko_test(type: Test) {
    useJUnitPlatform {
        systemProperties += System.properties
        includeTags 'Oko'
    }
    testLogging {
        lifecycle {
            events "passed", "failed"
            exceptionFormat "short"
        }
    }
}

task privat_test(type: Test) {
    useJUnitPlatform {
        systemProperties += System.properties
        includeTags 'Privat'
    }
    testLogging {
        lifecycle {
            events "passed", "failed"
            exceptionFormat "short"
        }
    }
}