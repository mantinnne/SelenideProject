plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.8.1"

}


repositories {
    mavenCentral()
}

dependencies {
    compile('com.codeborne:selenide:5.18.1')
    compile('com.codeborne:pdf-test:1.5.1')
    compile('com.codeborne:xls-test:1.4.3')
    compile('net.lingala.zip4j:zip4j:1.3.2')
    compile('com.github.javafaker:javafaker:1.0.2')
    compile('org.hamcrest:hamcrest-all:1.3')
    compile('org.assertj:assertj-core:3.19.0')
    compile('com.fasterxml.jackson.core:jackson-databind:2.10.3')
    compile("org.junit.jupiter:junit-jupiter-api:5.7.0")
    compile("org.junit.jupiter:junit-jupiter-params:5.7.0")
    compile("org.junit.jupiter:junit-jupiter-engine:5.7.0")
    compile("com.github.javafaker:javafaker:1.0.2")
    compile("io.qameta.allure:allure-java-commons:2.13.8")
    compile("io.qameta.allure:allure-selenide:2.13.8")
    compile 'org.slf4j:slf4j-nop:1.7.25'



}
allure {
    autoconfigure = true
    version = '2.13.8'

    useJUnit5 {
        version = '2.13.8'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'

}

test {
    useJUnitPlatform()
    testLogging {
        lifecycle {
            exceptionFormat "short"
            events "started", "skipped", "failed", "standard_out"
        }
    }
}
task Oko_test(type: Test) {
    useJUnitPlatform {
        includeTags 'Oko'
    }
    testLogging {
        lifecycle {
            exceptionFormat "short"
            events "started", "skipped", "failed", "standard_out"
        }
    }
}
task Privat_test(type: Test) {
    useJUnitPlatform {
        includeTags 'Privat'
    }
    testLogging {
        lifecycle {
            exceptionFormat "short"
            events "started", "skipped", "failed", "standard_out"
        }
    }
}